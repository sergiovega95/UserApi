@page
@using RazorClient.Pages
@model UserModel
@{
    ViewData["Title"] = "Home page";
}
@{
    Layout = "_LayoutUsers";
}


@Html.AntiForgeryToken()
@using DevExtreme.AspNet.Mvc
@using RazorClient.Models

<script>

    $.ajaxSetup({
        data: {
            __RequestVerificationToken: document.getElementsByName("__RequestVerificationToken")[0].value
        }
    });

</script>


<h1 style="text-align:left" class="mt-5">GESTIÓN DE USUARIOS</h1>

<div class="text-center mt-5">
    @(Html.DevExtreme().DataGrid<User>()
   .DataSource(d=>d.RemoteController()
   .LoadUrl("?handler=GetUsers")
   .DeleteUrl("?handler=DeleteUser")
   .UpdateUrl("?handler=UpdateUser")
   .InsertUrl("?handler=InsertUser")
   .Key("IdUser")
   )
   .FilterRow(filterRow => filterRow
   .Visible(true)
   .ApplyFilter(GridApplyFilterMode.Auto))
   .AllowColumnResizing(true)
   .ColumnAutoWidth(false)
   .ID("Usuarios")
   .Paging(paging => paging.PageSize(10))
   .Pager(pager =>
   {
       pager.ShowPageSizeSelector(true);
       pager.ShowNavigationButtons(true);
       pager.Visible(true);
       pager.AllowedPageSizes(new[] { 5, 10, 20 });
       pager.ShowInfo(true);
   })
   .ColumnFixing(c => c.Enabled(true))
   .ShowColumnLines(true)
   .ShowRowLines(true)
   .RowAlternationEnabled(true)
   .ShowBorders(true)
   .OnEditingStart("IniciaEdicion")
   .OnInitNewRow("insertando")
   .Editing(e=>e.AllowAdding(true).AllowDeleting(true).AllowUpdating(true).Mode( GridEditMode.Form).UseIcons(true).Form(s=>s.CustomizeItem("customize")))
   
   .Columns(c=>
   {
      
       c.AddFor(m=>m.DocumentType.Id).Lookup(l=>l.DataSource(d=>d.RemoteController().LoadUrl("?handler=TiposDocumentos").Key("Id")).DisplayExpr("Name").ValueExpr("Id")).Caption("Tipo de documento").ValidationRules(s=>s.AddRequired().Message("Campo Obligatorio")).FormItem(e=>e.Editor(s=>s.SelectBox().DataSource(s=>s.RemoteController().LoadUrl("?handler=TiposDocumentos").Key("Id")).DisplayExpr("Name").ValueExpr("Id")));
       c.AddFor(m=>m.Document).Caption("Documento").ValidationRules(s => s.AddRequired().Message("Campo Obligatorio")).FormItem(e => e.Editor(s => s.TextBox()));
       c.AddFor(m=>m.Name).Caption("Nombre").ValidationRules(s => s.AddRequired().Message("Campo Obligatorio")).FormItem(e => e.Editor(s => s.TextBox()));
       c.AddFor(m=>m.LastName).Caption("Apellido").ValidationRules(s => s.AddRequired().Message("Campo Obligatorio")).FormItem(e => e.Editor(s => s.TextBox()));
       c.AddFor(m=>m.Email).Caption("Correo Electronico").ValidationRules(s => s.AddRequired().Message("Campo Obligatorio")).ValidationRules(s=>s.AddEmail().Message("Formato de correo inválido")).FormItem(e => e.Editor(s => s.TextBox()));
       c.AddFor(m=>m.Password).Caption("Contraseña").Visible(false).ValidationRules(s => s.AddRequired().Message("Campo Obligatorio")).ValidationRules(t=>t.AddStringLength().Min(8).Max(20).Message("Mínimo 8 caracteres")).FormItem(e => e.Editor(s => s.TextBox().Mode( TextBoxMode.Password).ID("txtpassword")));

   })
    )
</div>

<script>

    var editando = false;

    function IniciaEdicion(e)
    {
        editando = true;
        $("#Usuarios").dxDataGrid("instance").columnOption("DocumentType.Id", "allowEditing", false);
        $("#Usuarios").dxDataGrid("instance").columnOption("Document", "allowEditing", false);

    } 

    function insertando(e)
    {
        editando = false;
        $("#Usuarios").dxDataGrid("instance").columnOption("DocumentType.Id", "allowEditing", true);
        $("#Usuarios").dxDataGrid("instance").columnOption("Document", "allowEditing", true);
    }

    function customize(e)
    {
        if (editando && e.dataField == "Password")
        {
            e.visible = false;
        }
        else
        {
            e.visible = true;
        }
        console.log(e);
    }
    

    function CloseSesion()
    {
            window.location.href = "/Index";
    }

</script>